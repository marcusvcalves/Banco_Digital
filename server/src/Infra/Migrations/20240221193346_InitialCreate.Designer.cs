// <auto-generated />
using System;
using Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240221193346_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Entities.Apolice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartaoDebitoId")
                        .HasColumnType("int");

                    b.Property<int>("CartaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataContratacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoAcionamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CartaoDebitoId");

                    b.HasIndex("CartaoId");

                    b.ToTable("Apolices");
                });

            modelBuilder.Entity("Domain.Models.Entities.Cartao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContaId")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusCartao")
                        .HasColumnType("int");

                    b.Property<string>("TipoCartao")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.ToTable("Cartoes");

                    b.HasDiscriminator<string>("TipoCartao").HasValue("Cartao");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasDiscriminator<string>("TipoCliente").HasValue("Cliente");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.Entities.Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoConta")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Contas");

                    b.HasDiscriminator<string>("TipoConta").HasValue("Conta");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.Entities.CartaoCredito", b =>
                {
                    b.HasBaseType("Domain.Models.Entities.Cartao");

                    b.Property<decimal>("LimiteCredito")
                        .HasColumnType("decimal(18, 2)");

                    b.HasDiscriminator().HasValue("credito");
                });

            modelBuilder.Entity("Domain.Models.Entities.CartaoDebito", b =>
                {
                    b.HasBaseType("Domain.Models.Entities.Cartao");

                    b.Property<decimal>("LimiteDiario")
                        .HasColumnType("decimal(18, 2)");

                    b.HasDiscriminator().HasValue("debito");
                });

            modelBuilder.Entity("Domain.Models.Entities.ClienteComum", b =>
                {
                    b.HasBaseType("Domain.Models.Entities.Cliente");

                    b.HasDiscriminator().HasValue("comum");
                });

            modelBuilder.Entity("Domain.Models.Entities.ClientePremium", b =>
                {
                    b.HasBaseType("Domain.Models.Entities.Cliente");

                    b.HasDiscriminator().HasValue("premium");
                });

            modelBuilder.Entity("Domain.Models.Entities.ClienteSuper", b =>
                {
                    b.HasBaseType("Domain.Models.Entities.Cliente");

                    b.HasDiscriminator().HasValue("super");
                });

            modelBuilder.Entity("Domain.Models.Entities.ContaCorrente", b =>
                {
                    b.HasBaseType("Domain.Models.Entities.Conta");

                    b.Property<decimal>("TaxaMensal")
                        .HasColumnType("decimal(18, 2)");

                    b.HasDiscriminator().HasValue("corrente");
                });

            modelBuilder.Entity("Domain.Models.Entities.ContaPoupanca", b =>
                {
                    b.HasBaseType("Domain.Models.Entities.Conta");

                    b.Property<decimal>("TaxaRendimento")
                        .HasColumnType("decimal(18, 2)");

                    b.HasDiscriminator().HasValue("poupanca");
                });

            modelBuilder.Entity("Domain.Models.Entities.Apolice", b =>
                {
                    b.HasOne("Domain.Models.Entities.CartaoDebito", null)
                        .WithMany("Apolices")
                        .HasForeignKey("CartaoDebitoId");

                    b.HasOne("Domain.Models.Entities.Cartao", "Cartao")
                        .WithMany()
                        .HasForeignKey("CartaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartao");
                });

            modelBuilder.Entity("Domain.Models.Entities.Cartao", b =>
                {
                    b.HasOne("Domain.Models.Entities.Conta", "Conta")
                        .WithMany("Cartoes")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("Domain.Models.Entities.Conta", b =>
                {
                    b.HasOne("Domain.Models.Entities.Cliente", "Cliente")
                        .WithMany("Contas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Domain.Models.Entities.Cliente", b =>
                {
                    b.Navigation("Contas");
                });

            modelBuilder.Entity("Domain.Models.Entities.Conta", b =>
                {
                    b.Navigation("Cartoes");
                });

            modelBuilder.Entity("Domain.Models.Entities.CartaoDebito", b =>
                {
                    b.Navigation("Apolices");
                });
#pragma warning restore 612, 618
        }
    }
}
